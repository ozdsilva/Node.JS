CTRL + ' para abrir e fechar o terminal

console.log(process); //informações do Node

console.log(console);

Na pasta principal criar no arquivo index.js

const calc = require('./modules/calculadora')

console.log(calc.somar(5,4))
console.log(calc.subtrair(5,4))

salvar na pasta modules dentro da pasta principal

const calculadora = {
    somar(a,b) {
        return a+b;
    },
    subtrair(a,b) {
        return a-b
    }
}    

module.exports = calculadora

---------

Pasta principal arquivo index

import {calculadora} from './modules/calculadora.js'

console.log(calculadora.somar(5,4))
console.log(calculadora.subtrair(5,4))

pasta modules arquivo calculadora

const calculadora = {
    somar: function (a,b) {
        return a+b;
    },

    subtrair: function (a,b) {
        return a-b
    }
}    

//module.exports = calculadora

export {calculadora}

criar arquivo json pelo comando: npm init

site: https://javascript.info/import-export

---------------

const http = require('http')

const hostname = '127.0.0.1';
const PORT = process.env.PORT || 3000;

const server = http.createServer(
    function (req, res) {
        let url = req.url
        if(url ==='/') {

        console.log(req)
        res.statusCode = 200
        res.setHeader ('Content-type', 'text/html; charset=utf-8')
        res.end('<h1>Olá Mundo!</h1>')
        }

        if(url === '/sobre'){
            res.statusCode = 200
            res.setHeader('Content-type','text/html; charset=utf-8')
            res.end('<h1>Página Sobre</h1>')
        }
}
)

server.listen(PORT, hostname, function (){
    console.log(`Servidor rodando em http://${hostname}:${PORT}`)
})

---------------

npm install -g nodemon //-g para instalar no node da máquina

---------------

const fs = require('fs')

/* Manipulação de Pastas */

//fs.existsSync() //Verificar se caminho existe
//fs.mkdirSync() //Criar pasta
//fs.renameSync() //Renomear uma pasta
//fs.rmdir() //deletar uma pasta

//fs.existsSync('./public') || fs.mkdirSync('./public')//ATALHO

/*if(!fs.existsSync('./public')){
    fs.mkdirSync('./public',(err)=>{
        if(err){
            throw err
        }
        console.log('Pasta criada com sucesso!')
    })
}else{
    console.log('A pasta "public" já existe!')
}*/

/*if(fs.existsSync('./public')){
    fs.renameSync('./public','./oznir',(err)=>{
        if(err){
            throw err
        }
        console.log('Pasta renomeada com sucesso!')
    })
}else{
    console.log('Impossível renomear, porque a pasta não existe.')
}*/
if(fs.existsSync('./oznir')){
    fs.rmdirSync('./oznir',{recursive:true},(err)=>{
        if(err){
            throw err
        }
        console.log('Pasta deletada com sucesso!')
        
    })
}else{
    console.log('Impossível deletar, porque a pasta não existe.')
}

---------------

/*CRIAR / ATUALIZAR ARQUIVOS*/

//fs.writeFile() //Criar arquivo e substitui o arquivo se já existe.
//fs.appendFile() //adiciona conteúdo num arquivo. Se o arquivo não existir ele cria vazio
//fs.open() //abre arquivo para leitura. Se o arquivo não existir ele cria vazio
//fs.readFile() //carrega o arquivo

/*if(!fs.existsSync('teste.txt')){
fs.writeFile('teste.txt', 'teste de conteúdo!', (err)=>{
    if(err){
        throw err
    }
    console.log('Arquivo criado com sucesso!')
})
}*/

/*fs.appendFile('teste.txt', 'teste de conteúdo?!', (err)=>{
    if(err){
        throw err
    }
        console.log('Arquivo criado com sucesso!')
    })*/

/*fs.open('arquivo.txt','w',(err, file)=>{
    if(err){
        throw err
    }
        console.log('Salvo')
})*/

/*fs.rename('w','arquivo2.txt',(err)=>{
    if(err){
        throw err
    }
        console.log('Renomeado!')
})*/

/*fs.unlink('arquivo2.txt',(err)=>{
    if(err){
        throw err
    }
        console.log('Renomeado!')
})*/

-----------

expressjs.com

npm i express --save 

const express = require('express')
const app = express()

const PORT = process.env.PORT || 3000

app.get('/',(req, res)=>{
    //res.send('<h1>Hello</h1>')
    res.sendFile(__dirname + './public/index.html')
})

app.listen(PORT, ()=>{
    console.log(`Servidor rodando em http://localhost:${PORT}`)
})

------------------------

no index.js

const express = require('express')
const app = express()

const carros = require('./routes/carro')

const PORT = process.env.PORT || 3000

app.get('/',(req, res)=>{
   res.send('<h1>Hello</h1>')
})

app.get('/sobre',(req, res)=>{
   res.send('<h1>Hello</h1>')
})

app.use('/carros',carros)


---no arquivo ./routes/carros.js

const express = require('express')
const router = express.Router()

router.get('/', (req, res)=>{
   res.send('Rota Carros')
})

router.get('/:marca',(req, res)=>{
    const marcas = ['fiat','volks','bmw']
    if(marcas.includes(req.params.marca)){   //para validar apenas determinadas marcas
    res.send('A rota ' +req.params.marca)
    }else{
        res.status(404).send('MARCA NÃO ENCONTRADA')
}
})

router.get('/:marca/:modelo',(req,res)=>{
    res.send('A rota é Fiat')
})

module.exports = router

---------------

MIDDLEWARES

const express = require('express')
const app = express()

usuarioLogado = true

const PORT = process.env.PORT || 3000

app.get('/restrita',(req, res, next)=>{
    if(!usuarioLogado) {
    res.redirect('/')
    }
     next()
 })

 app.get('/restrita/usuarios',(req, res, next)=>{
    if(!usuarioLogado) {
    res.redirect('/')
    }
     next()
 })

app.get('/',(req, res, next)=>{
   res.send('<h1>Página inicial</h1>')
    next()
})

app.get('/restrita',(req, res, next)=>{
    res.send('<h1>Página restrita</h1>')
     next()
 })

 app.get('/restrita/usuarios',(req, res)=>{
    res.send('<h1>Listar usuários</h1>')
 })

app.listen(PORT, ()=>{
    console.log(`Servidor rodando em http://localhost:${PORT}`)
})

------------

Template engines: handlebars e EJS

npm i express-handlebars --save